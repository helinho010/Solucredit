#!/bin/bash

################################### Parametros ############################################### 
# Horas que deberia estar disponibles el servidor [min]
hd=600 

#Establecer la direccion del servidor a testear
servidor="192.168.2.90"

#rutaArchivoDiagnostico
rarch="/home/ubuntu/Desktop"

# Tiempo para realizar el Ping 
tping=1

# Numeros de paquetes a enviar
numPaquetes=$1
numPaquetes=${numPaquetes:-1}

# Tiempo entre paquetes
tiempoEntrePaquetes=$2
tiempoEntrePaquetes=${tiempoEntrePaquetes:-2}

# Email predeterminado para el envio de la alerta
nombreUsuario="g.apaza007@gmail.com"

# Variables donde se almacena los resultados del comando ping
numeroPaquetesTransmitidos=0
numeroPaquetesRecividos=0
numeroPaquetesPerdidos=0
resulping=0

################################################################################################


# Funcion que envia un correo electronico o sms a una determinado contacto

function alertaCaida()
{
  curl -n --ssl-reqd --mail-from $nombreUsuario --mail-rcpt "hmejia@solucredit.com.bo" --url smtps://smtp.gmail.com:465 --user "$nombreUsuario:$contrasenia" --upload-file $rarch/mail.txt
}

# funcion que captura  la respuesta del comando ping con un envio ICMP
function capturaPing()
{
  ((numPaquetes=$tping*60))
  resultadoPing=$(ping -q -c $numPaquetes $servidor | grep "packets transmitted")
    #Paquetes transmitidos
    npt=${resultadoPing%,*ved*}
    npt=${npt%\ *packets transmitted}
    npt=$(echo $npt | tr -d '[[:space:]]')
    #Paquetes recividos
    npr=${resultadoPing#*tted,}
    npr=${npr%,\ *loss*}
    npr=${npr%\ *received}
    npr=$(echo $npr | tr -d '[[:space:]]')
    #Paquetes Perdidos
    npp=${resultadoPing#*ved,}
    npp=${npp%,*ms}
    npp=${npp%\%*packet loss}
    npp=$(echo $npp | tr -d '[[:space:]]')

    npt=${npt:-10}
    npr=${npr:-10}
    npp=${npp:-10}
    ((numeroPaquetesTransmitidos=$numeroPaquetesTransmitidos+$npt))
    ((numeroPaquetesRecividos=$numeroPaquetesRecividos+$npr))
    ((numeroPaquetesPerdidos=$numeroPaquetesPerdidos+$npp))

}

# Funcion de llenao de archivo email
function armadoArchivoMail()
{
  echo -e "From: 'George' <g.apaza007@gmail.com>" > $rarch/mail.txt
  echo -e "To: 'Helio' <hmejia@solucredit.com.bo>" >> $rarch/mail.txt
  echo -e "Subject: Alerta-Servidor-En-Riesgo" >> $rarch/mail.txt
  echo -e "\n NUMERO DE PAQUETES TRANSMITIDOS: $numeroPaquetesTransmitidos \n" >> $rarch/mail.txt
  echo -e "\n NUMERO DE PAQUETES RECIBIDOS: $numeroPaquetesRecividos \n" >> $rarch/mail.txt
  echo -e "\n PORCENTAJE DE PAQUETES PERDIDOS: $numeroPaquetesPerdidos \n" >> $rarch/mail.txt

}

#function main()
#{
  # Tiempo de sondeo en segundos
  ts=5
  contador=0
  while [ $contador -lt 2 ]
  do
    capturaPing
    ((contador=$contador+1))
    sleep $ts
  done
   if [[ $numeroPaquetesPerdidos -eq 0 ]]
    then
     echo -e "\n \033[0;34m Esta disponible al 100% \033[0m \e[1;36m bravo! ::: $numeroPaquetesPerdidos \033[0m \n"
    else
     if  [[ $numeroPaquetesPerdidos -le 10 && $numeroPaquetesPerdidos -gt 0 ]]
     then
	echo -e "\n \033[0;34m Alerta de intermitencia, los paquetes o el porcentaje de paquetes perdidos esta entre 0 y 10% \033[0m :::: $numeroPaquetesPerdidos\n"

     else
    	echo -e "\n \033[0;34m Alerta de intermitencia ALTA, puede llevar a una perdida de servicio  \033[0m  ::: $numeroPaquetesPerdidos\n"
        armadoArchivoMail
	cat $rarch/mail.txt
     fi
   fi
#}
